enum VoteStatus {
  OPEN
  CLOSED
  PENDING
}

interface BlockchainEvent {
  id: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RewardClaimed implements BlockchainEvent @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  voteId: BigInt! # uint256
  rewardAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserRegistered implements BlockchainEvent @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  nullifierHash: BigInt! # uint256
  createdAtBlock: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteCreated implements BlockchainEvent @entity(immutable: true) {
  id: Bytes!
  voteId: BigInt! # uint256
  question: String! # string
  startBlock: BigInt! # uint256
  durationInBlocks: BigInt! # uint256
  status: VoteStatus! # Enum for vote status
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VoteSubmitted implements BlockchainEvent @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  voteId: BigInt! # uint256
  answerIndex: BigInt! # uint256
  stakeAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DailyAggregations @entity {
  id: String! # Format: "YYYY-MM-DD"
  totalVotes: BigInt!
  totalRewards: BigInt!
  totalUsers: BigInt!
}
